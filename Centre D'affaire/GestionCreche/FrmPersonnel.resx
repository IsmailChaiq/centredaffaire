<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAQEA8QEA8PDw8NDQ0PDw0PDQ8NDQ0NFREWFhURFRUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCgUFBQ4FBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCAC8AQsDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAgMAAQQFBgf/xAA0EAACAQIEBAQEBgIDAQAAAAAAAQIDEQQSITFBUWFx
        BROBkSKhsdEyQlJiwfBzwnKS4SP/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/8QAFBEBAAAAAAAAAAAAAAAA
        AAAAAP/aAAwDAQACEQMRAD8A+tNg5ipMFsA7lZheYmYBmYtSE5iZgJiJbCM5MVPRdzI6oG6Mw4yMMao2
        NUDVKRakZalXYkKoG1SGJmWMxsZgaEw0xEZDFIBiZLgZiswB3LuAmEgCJcG5ALKlKyuSUrGWpO/2Auc7
        spFIsCxdSpbuVUqW7iLgEmGAiNgHmKzC8xWYBtyZheYmYDXMW2MmKYFNkuVcq4FXJcpggBi38L6NHMcz
        qVVeMl0ZxZMDRGoOjMxxY6LAdWnoioVRVZ/D6oVGQHShVHwqnOpyHxkB0YVBqqHNVWwyNQDfnCizLCQ+
        MgHolxeYJAGiSlbcGU0hMm2BJzv9ikgoxCsALE1altFuSrV4L3E2AotFgtgW2A5AykA2AdyXF3LuAaZY
        KCQG+YpjmhMkABQTJYBcikMaBsBSOJXjaTXJtfM7iRyfEoWm+qT/AL7AZ4D4iIGiAEqL4X2M0WbbcOaM
        UUBopsY6lttzOp8F7jYQAZBmimKhActANEJDIzM8R0EBogwnUt3+hmdXgvcOCAYtRkYlRQUpJAR6CZzv
        2LepeUBGUjQ1oXMBUhMmNmKaABspkZQECREg4wAkUGohRgN8sDVYXUQ2wM0AixEg7ESACwNh1gZRABIw
        eLU9Iy6tfyv5OmoiMfSzU5dFm9gOBFGmmhMUaINLvyAatDm1vxNbK50UmxGIo/FfmkAujA206YFGBoig
        KsHCAcIBNpd+QESS3Bbb7Fxg3qzRTpgLp0zRGJdrFbgW58iJFxgMUQAykGWKaATJCpI0uIuUQMriLcTX
        KADgBlcCshq8sJUgM8aY6FMdGkOhSATCkN8scoBZQFOJTQ2xTQGaxEhs4g2ApIkkGkXlAVlLy/3oHYFu
        4HmMR8EpR4xbVw8PG5q8Ww9qmbhNL3Wn2Bw8ANFOmVi4aJ8nY0QJVpXi+e/sBhpxubKcBUElqxibl0XI
        AnLhH3Cp0htOkPjABcaYewXb3LjAAFG4agMUQlEAFEuwdiZQF2JYblJlAVlBcB+UmUDM4E8s0ZC8gGby
        wo0zQoBqACY0glEZYlgAsXYKxLAAC0HYqwC5RAsPsA0AFiy3oVuAuWpcYjHEuwGLxSjenfjBp+mz/vQ5
        NOXL3PRTipJx4NNPszgRpOMnF7xbXsBrw8TRUqKPV8jH59tI6y+SHUaV9Xq3xAyxptvXg/RG6jTLnSs+
        6GRdgGJWJa5IxvuOjEAYxGKISiEkAKRdg0iWACxdg7EsAFiWDsSwAWLsFYuwAZQsoVi7ADYjCKsANimg
        iWAAhZABsSxUZBoALA1ENYNgM6DSDylWAgDC3JYCRRwvGKn/ANPg4q0pLbMuRsxmLzNwg9NpSXHohUsL
        eDtutV3QGXCUzrUIGDDI1+bwXq+QDcS9LLdP2F0ojKcNCQQDoIbFAwGRQFpBJESCSAli7Fl2AGxCyACS
        wVirAUEirFgQhCAURllMCii2A2BGDcqUhTqAMsS9grAtAFGfMNC0i0gDaFstzJdAUkc7xPFa+XB6/nkv
        y/tXU0eI4ry46fjnpHpzkc3C0ff6sBmFoHRpQBpUy8VWyR0/FLRL+QOXjPgm4x469k+AzDoGrRus27Wv
        V8wqDA3wJJa9wabGtXXYAoDYioDogGgkCg0BLFkIBCmWQASEIBCEuVcCyEuRgQFsjZTYFNi5MJgOICps
        DKx7ilv7cSs37fmA5ksRSLAqxTDKkgFWKkvkMsY/FqmWlK28rRXrv8rgcadZ1Kjlw2iuUeH39TpYXsc/
        DUzp0EBtha3LucqdTzJuXDaP/E1Y+plpy5u0V6/+XMOHQG6nEyShlk1w4djTCQOJjdX4x+nEA6UjRFmG
        jM2QkAaHRFPmHBgOQSATCQBkBTLuBZTJcoCFNkbKbAhLlXKuAVyA3JnAIpoFzYLi2Bcprv2Abb6dgmkv
        txKbb/av7xAHKl1fzL16ewt1OEf+32B8m+rA02IHYlgKUinJFtATQBo5vj34If5P9WbbGTxaDlSlxcbT
        9t/lcDBhkdCijk4WsdSjVXMBfi/4I/5F9GZ8PsbfEIZ6UrauNpL03+Vzn4WYG2IRUUFYDJJZZdHqjTSk
        DWp3XVbdxNGYHRjIuMrCKchsnxAfGQxMzQkMUgHXLuKUi8wB3JcXmKzAG5AuQDkC5AG5FZhUpgOqBouW
        jL5rCT5sDTnXf6Eu307CPPittX8vcmaUu3JaAHKcVtq+m3uBaUt9uXAuSjBXk7fV9kYMVjXLSPwx+b7g
        OxOLjDSNnLn+WP3OZOo22222+NypMoD07ZM6IwJIBhGhJM7AOxVgXV6FKuuN0BwMbhnRn+yTvB/6+g/D
        1DrV4U6kXGVmn6NPmupwcRQnRlZ6xb+Ga2fR8mB1IM5eIpulPT8EtYvlziasPXuaZRjNOMldP3XVdQM+
        HxDNPmdDm1aMqT11hwnw7PkzVQqpgac/QzYhWeZbPfvzNMUXKndW4MBFGqaY1Ec6UHCVn6PmjRTkBozW
        dvYbGZnkrrqtgYTA25yZzOpF5gHOYLqCnICU+oDnUFymJlVQqVZgPcgJVUuJlnUfMW5AaXieSK8xvdmV
        yFTxqW2r57IDq05c9EVPxFLSGr/U9jhzxTlu/TgCqwHTqV3J3buxbmY41gvMA0ORMwhTDzAeuKaIWAqU
        QbDgZIBTQMoX+4woDPKLQE4Jppq6e6ezNdgJxQHEr+HzjrSk2v0N6rs3/IqljJp2ejXBqzR3bC62HhNf
        FFPrxXqBhp49vRqLXG60aAlDjTSX7Lu3ozPiaahNxTbStvuNoyYDKeNa0lFp8mzVTxy/T8wElLRpPuZ8
        RTUGrX156gbK8lNbWa1TvszLSrW0as11CoyKxS2lxbs+oGmFbp8xdWTTulo9+jKomlRTVmAiNVlub5iq
        a+rHWABsBsbJC5IBTYDYdTRGOdRgNnNLiZ6mI5e7FzYmTAqpVb3YmUy5iZMC3UIqgqQNwNcaoyNQxRY6
        DA2xkGpmeDGAf//Z
</value>
  </data>
</root>